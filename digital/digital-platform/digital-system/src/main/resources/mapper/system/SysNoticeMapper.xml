<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meide.system.mapper.SysNoticeMapper">
    
    <resultMap type="com.meide.system.domain.SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
        <result property="isRead" column="is_read"/>
        <result property="isPublish" column="is_publish"/>
    </resultMap>
    
    <sql id="selectNoticeVo">
        select notice_id, notice_title, notice_type, notice_content, status, create_by, create_time,
        update_by, update_time, remark ,is_read,is_publish
		from sys_notice
    </sql>
    
    <select id="selectNoticeById" parameterType="Long" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>
    
    <select id="selectNoticeList" parameterType="com.meide.system.domain.SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
            <if test="noticeTitle != null and noticeTitle != ''">
                AND notice_title like concat('%', #{noticeTitle}, '%')
            </if>
            <if test="noticeType != null and noticeType != ''">
                AND notice_type = #{noticeType}
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="isPublish != null and isPublish">
                AND is_publish = #{isPublish}
            </if>
        </where>
        order by create_time desc
    </select>
    <select id="selectUserNoticeList" resultType="com.meide.system.domain.SysNotice">
        select notice_id, notice_title, notice_type, notice_content, status,
        create_by, create_time, update_by, update_time, remark,is_read
        from sys_notice
        where
        is_publish =1 and
        (notice_id in(SELECT notice_id from sys_notice_dept where dept_id in (SELECT ancestors from sys_dept where
        dept_id=#{deptId}))
        or
        notice_id in(SELECT notice_id from sys_notice_user where user_id = #{userId}))
        <if test="notice.noticeTitle != null and notice.noticeTitle != ''">
            AND notice_title like concat('%', #{notice.noticeTitle}, '%')
        </if>
        <if test="notice.noticeType != null and notice.noticeType != ''">
            AND notice_type = #{notice.noticeType}
        </if>
        <if test="notice.createBy != null and notice.createBy != ''">
            AND create_by like concat('%', #{notice.createBy}, '%')
        </if>
    </select>

    <insert id="insertNotice" parameterType="com.meide.system.domain.SysNotice"
            useGeneratedKeys="true" keyProperty="noticeId" keyColumn="notice_id">
        insert into sys_notice (
        <if test="noticeTitle != null and noticeTitle != '' ">notice_title,</if>
        <if test="noticeType != null and noticeType != '' ">notice_type,</if>
        <if test="noticeContent != null and noticeContent != '' ">notice_content,</if>
        <if test="status != null and status != '' ">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="isPublish != null ">is_publish,</if>
        create_time
        )values(
        <if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle},</if>
        <if test="noticeType != null and noticeType != ''">#{noticeType},</if>
        <if test="noticeContent != null and noticeContent != ''">#{noticeContent},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="isPublish != null">#{isPublish},</if>
        sysdate()
        )
    </insert>
    <insert id="addNoticeDept" parameterType="list">
        insert into sys_notice_dept (notice_id,dept_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.noticeId},#{item.deptId})
        </foreach>
    </insert>
    <insert id="addNoticeUser" parameterType="list">
        insert into sys_notice_user (notice_id,user_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.noticeId},#{item.userId})
        </foreach>
    </insert>

    <update id="updateNotice" parameterType="com.meide.system.domain.SysNotice">
        update sys_notice
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle},</if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType},</if>
            <if test="noticeContent != null">notice_content = #{noticeContent},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="isRead != 0 ">is_read = #{isRead},</if>
            <if test="isPublish != null ">is_publish = #{isPublish},</if>
 			update_time = sysdate()
        </set>
        where notice_id = #{noticeId}
    </update>

    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

    <delete id="deleteNoticeDeptByNoticeId" parameterType="Long">
        delete from sys_notice_dept where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeUserByNoticeId">
        delete from sys_notice_user where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeDept" parameterType="Long">
        delete from sys_notice_dept where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

    <delete id="deleteNoticeUser" parameterType="Long">
        delete from sys_notice_user where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

    <select id="selectNoticeDeptList" resultType="com.meide.system.domain.SysNoticeDept">
        select id,notice_id,dept_id from sys_notice_dept where notice_id=#{noticeId}
    </select>

    <select id="selectNoticeUserList" resultType="com.meide.system.domain.SysNoticeUser">
        select id,notice_id,user_id from sys_notice_user where notice_id=#{noticeId}
    </select>
</mapper>